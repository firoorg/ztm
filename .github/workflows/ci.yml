name: Continuous Integration
on: [push, pull_request]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET Core 2.2
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.2.207'
    - name: Install EF CLI
      shell: cmd
      run: dotnet.exe tool install --global dotnet-ef --version 3.0.0
    - name: Build
      shell: cmd
      run: dotnet.exe build src\Ztm.sln
    - name: Unit Test
      run: |
        Get-ChildItem -Path src -Filter *.Tests -Directory | ForEach-Object {
            $name = $_.Name
            $path = $_.FullName
            $params = @(
                "test",
                "--no-build",
                "-v normal",
                "--collect `"Code Coverage`"",
                "-r coverage-reports",
                $path
            )

            $runner = Start-Process -FilePath dotnet.exe -ArgumentList $params -NoNewWindow -PassThru -Wait

            if ($runner.ExitCode -ne 0) {
                exit $runner.ExitCode
            }

            Write-Host

            $coverage = Start-Process -FilePath "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Team Tools\Dynamic Code Coverage Tools\CodeCoverage.exe" -ArgumentList analyze, /output:$name.coveragexml, coverage-reports\$name.coverage -NoNewWindow -PassThru -Wait

            if ($coverage.ExitCode -ne 0) {
                exit $coverage.ExitCode
            }

            Remove-Item -Path coverage-reports\$name.coverage
        }
    - name: Create Release
      shell: cmd
      run: dotnet.exe publish -o "%GITHUB_WORKSPACE%\release" -r linux-musl-x64 -c Release src\Ztm.WebApi
    - name: Create Migration Scripts for Main Database
      shell: cmd
      env:
        ZTM_MAIN_DATABASE: Host=127.0.0.1;Database=postgres;Username=postgres
      run: dotnet.exe ef migrations script -o "%GITHUB_WORKSPACE%\release\Ztm.Data.Entity.Postgres.sql" -i -p src\Ztm.Data.Entity.Postgres
    - name: Create Release for E2E Runner
      shell: cmd
      run: dotnet.exe publish -o "%GITHUB_WORKSPACE%\e2e-runner" --no-build src\Ztm.EndToEndTests
    - name: Archive Release Artifact
      uses: actions/upload-artifact@v1
      with:
        name: release
        path: release
    - name: Archive E2E Runner Artifact
      uses: actions/upload-artifact@v1
      with:
        name: e2e-runner
        path: e2e-runner
    - name: Archive Coverage Reports
      uses: actions/upload-artifact@v1
      with:
        name: coverage-reports
        path: coverage-reports
  e2e:
    name: E2E Test
    needs: build
    runs-on: ubuntu-18.04
    env:
      DOCKER_NETWORK: ztm
      DOCKER_DB_MAIN: ztm-db-main
      DOCKER_ZCOIND: ztm-zcoind
      DOCKER_ZTM: ztm
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.2.207'
    - name: Get Release Artifact
      uses: actions/download-artifact@v1
      with:
        name: release
        path: release
    - name: Get E2E Runner Artifact
      uses: actions/download-artifact@v1
      with:
        name: e2e-runner
        path: e2e-runner
    - name: Fix File Permissions
      run: chmod +x release/Ztm.WebApi
    - name: Create Docker Network
      run: docker network create $DOCKER_NETWORK
    - name: Start PostgreSQL
      run: docker run --rm -d --name $DOCKER_DB_MAIN --network $DOCKER_NETWORK postgres:10
    - name: Start Zcoin Daemon
      run: docker run --rm -d --name $DOCKER_ZCOIND --network $DOCKER_NETWORK zcoinofficial/zcoind:latest -regtest -exodus -dandelion=0 -rpcuser=zcoin -rpcpassword=zcoin -rpcallowip=0.0.0.0/0 -zmqpubhashblock=tcp://0.0.0.0:28332
    - name: Configure ZTM
      shell: python
      run: |
        import json
        import os

        with open('release/appsettings.json') as f:
          conf = json.load(f)

        conf['Logging']['LogLevel']['Default'] = 'Information'
        conf['Database']['Main']['ConnectionString'] = 'Host={0};Database=postgres;Username=postgres'.format(os.environ['DOCKER_DB_MAIN'])
        conf['Zcoin']['Network']['Type'] = 'Regtest'
        conf['Zcoin']['Rpc']['Address'] = 'http://{0}:28888'.format(os.environ['DOCKER_ZCOIND'])
        conf['Zcoin']['ZeroMq']['Address'] = 'tcp://{0}:28332'.format(os.environ['DOCKER_ZCOIND'])

        with open('release/appsettings.json', 'w') as f:
          json.dump(conf, f, indent=2)
    - name: Start ZTM
      run: docker run --rm -d --name $DOCKER_ZTM --network $DOCKER_NETWORK --user=1000:1000 -v $GITHUB_WORKSPACE/release:/opt/ztm:ro -w /opt/ztm -p 5000:5000 mcr.microsoft.com/dotnet/core/runtime-deps:2.2-alpine /opt/ztm/Ztm.WebApi --urls=http://*:5000
    - name: Run E2E Tests
      env:
        ZTM_HOST: localhost
        ZTM_PORT: 5000
      run: dotnet vstest e2e-runner/Ztm.EndToEndTests.dll
    - name: Stop Containers
      run: docker stop $DOCKER_ZTM $DOCKER_ZCOIND $DOCKER_DB_MAIN
    - name: Remove Docker Network
      run: docker network rm $DOCKER_NETWORK
